# Generated by Django 2.2.7 on 2020-01-04 15:52

import datetime
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=25, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.Country')),
            ],
            options={
                'db_table': 'exchange',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'instrument',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=10)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('exchange', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='trading.Exchange')),
                ('favourite', models.ManyToManyField(blank=True, related_name='favourite', to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='trading.Instrument')),
            ],
            options={
                'db_table': 'stock',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_date', models.DateTimeField(default=datetime.datetime.now)),
                ('close_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('open_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('close_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('result', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('direction', models.CharField(choices=[('BUY', 'BUY'), ('SELL', 'SELL')], max_length=5)),
                ('open', models.BooleanField(default=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.Stock')),
            ],
            options={
                'db_table': 'positions',
            },
        ),
        migrations.CreateModel(
            name='IntradayData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('high', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('low', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('open', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('close', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.Stock')),
            ],
            options={
                'db_table': 'intraday_data',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('rate', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=10)),
                ('base', models.BooleanField(default=False)),
                ('country', models.ManyToManyField(related_name='country_currency', to='trading.Country')),
                ('instrument', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='trading.Instrument')),
            ],
            options={
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('value', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('earned', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('spent', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('high', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('low', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('open', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('close', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('adj_close', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('dividend', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('split_coefficient', models.DecimalField(decimal_places=2, default=Decimal('1'), max_digits=10)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trading.Stock')),
            ],
            options={
                'db_table': 'stock_data',
                'unique_together': {('date', 'instrument')},
            },
        ),
        migrations.AddConstraint(
            model_name='stock',
            constraint=models.UniqueConstraint(fields=('ticker', 'name', 'exchange_id'), name='Company Stock'),
        ),
        migrations.AlterUniqueTogether(
            name='intradaydata',
            unique_together={('timestamp', 'instrument')},
        ),
    ]
