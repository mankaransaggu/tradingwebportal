# Generated by Django 3.0.2 on 2020-01-25 14:19

import datetime
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import trading.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('first_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('last_name', models.CharField(max_length=100, verbose_name='first_name')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='account_value')),
                ('result', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, verbose_name='account_result')),
                ('live_result', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='live_result')),
                ('is_verified', models.BooleanField(default=False, verbose_name='verified')),
                ('verification_uuid', models.UUIDField(default=uuid.uuid4, verbose_name='Unique Verification UUID')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff_status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, verbose_name='last_login')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', trading.models.UserAccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('symbol', models.CharField(blank=True, max_length=15, null=True)),
                ('unicode_char', models.CharField(blank=True, max_length=15, null=True)),
                ('html_symbol', models.CharField(blank=True, max_length=15, null=True)),
                ('hex_code', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=25, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
            ],
            options={
                'db_table': 'exchange',
            },
        ),
        migrations.CreateModel(
            name='FX',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'fx_pair',
            },
        ),
        migrations.CreateModel(
            name='FXPriceData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('high', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10)),
                ('low', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10)),
                ('open', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10)),
                ('close', models.DecimalField(decimal_places=3, default=Decimal('0'), max_digits=10)),
                ('volume', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fx_price_data',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'instrument',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=10)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('exchange', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='listed_exchange', to='trading.Exchange')),
                ('favourite', models.ManyToManyField(blank=True, related_name='favourite_stock', to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stock_instrument', to='trading.Instrument')),
            ],
            options={
                'db_table': 'stock',
            },
        ),
        migrations.CreateModel(
            name='StockPriceData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('high', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('low', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('open', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('close', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('volume', models.IntegerField(blank=True, null=True)),
                ('adj_close', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('dividend', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('split_coefficient', models.DecimalField(decimal_places=2, default=Decimal('1'), max_digits=10)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_data', to='trading.Stock')),
            ],
            options={
                'db_table': 'stock_price_data',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('open_date', models.DateTimeField(default=datetime.datetime.now)),
                ('close_date', models.DateTimeField(blank=True, default=None, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('open_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('current_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('close_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('value', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('result', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10)),
                ('direction', models.CharField(choices=[('BUY', 'BUY'), ('SELL', 'SELL')], max_length=5)),
                ('open', models.BooleanField(default=True)),
                ('fx', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trading.FX')),
                ('stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trading.Stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'positions',
            },
        ),
        migrations.AddConstraint(
            model_name='instrument',
            constraint=models.UniqueConstraint(fields=('code', 'name'), name='instrument_type'),
        ),
        migrations.AddField(
            model_name='fxpricedata',
            name='currency_pair',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currency_pair', to='trading.FX'),
        ),
        migrations.AddField(
            model_name='fx',
            name='favourite_fx',
            field=models.ManyToManyField(blank=True, related_name='favourite_fx', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fx',
            name='from_currency',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='from_currency', to='trading.Currency'),
        ),
        migrations.AddField(
            model_name='fx',
            name='instrument',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='fx_instrument', to='trading.Instrument'),
        ),
        migrations.AddField(
            model_name='fx',
            name='to_currency',
            field=models.ForeignKey(default='2', on_delete=django.db.models.deletion.CASCADE, related_name='to_currency', to='trading.Currency'),
        ),
        migrations.AddField(
            model_name='exchange',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_country', to='trading.Country'),
        ),
        migrations.AddConstraint(
            model_name='currency',
            constraint=models.UniqueConstraint(fields=('code', 'name'), name='currency'),
        ),
        migrations.AddField(
            model_name='country',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='country_base', to='trading.Currency'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='stockpricedata',
            index=models.Index(fields=['timestamp', 'stock'], name='stock_price_timesta_8ec47d_idx'),
        ),
        migrations.AddConstraint(
            model_name='stockpricedata',
            constraint=models.UniqueConstraint(fields=('stock', 'timestamp'), name='unique_stock_data'),
        ),
        migrations.AddConstraint(
            model_name='stock',
            constraint=models.UniqueConstraint(fields=('ticker', 'name', 'exchange_id'), name='company_stock'),
        ),
        migrations.AddIndex(
            model_name='fxpricedata',
            index=models.Index(fields=['timestamp', 'currency_pair'], name='fx_price_da_timesta_0c43a9_idx'),
        ),
        migrations.AddConstraint(
            model_name='fxpricedata',
            constraint=models.UniqueConstraint(fields=('currency_pair', 'timestamp'), name='unique_fx_data'),
        ),
        migrations.AddIndex(
            model_name='fx',
            index=models.Index(fields=['from_currency', 'to_currency'], name='fx_pair_from_cu_552a4f_idx'),
        ),
        migrations.AddConstraint(
            model_name='fx',
            constraint=models.UniqueConstraint(fields=('from_currency', 'to_currency'), name='unique_currency_pair'),
        ),
    ]
